#include <iostream>

using namespace std;
//스택 값들의 괄호가 같은지 검사하는 함수
bool areBracketsBalanced(const string& expr) {
    //스택 문자열
    char stack[100];
    //stack 괄호 저장 변수
    char x;
    //top 변수
    int top=-1;
    //괄호 검사
    for (char c : expr) {
        //c 문자가 괄호일때 stack에 추가 후 컨티뉴해서 다른 expr의 문자 가져옴
        if (c == '(' || c == '{' || c == '[') {
            stack[++top] = c; // top을 증가시킨 후 스택에 푸시
            continue;
        }
        // c문자가 닫힌 괄호일때 스택 없으면 오류, 아니면 x에 stack의 top 인덱스 값 넣은 후 x가 괄호가 아니라면 false,괄호라면 true
        else if (c == ')' || c == '}' || c == ']') {
            if (top == -1)
                return false; // 닫는 괄호에 대응하는 여는 괄호가 없는 경우

            x = stack[top--]; // 스택에서 괄호 꺼내기
            if ((c == ')' && x != '(') || (c == '}' && x != '{') || (c == ']' && x != '['))
                return false; // 괄호의 짝이 맞지 않는 경우
        }
        // 그 외의 문자는 무시 (A, B, +, -, *, / 등)
    }

    return (top == -1); // 스택이 비어 있어야 모든 괄호가 짝이 맞는 것임
}
int main() {
    //입력할 문자열 변수
    string expr;
    //옵션
    string option;
    //top 변수
    int top;
    while (1) {
        cout << "작업선택(1:값입력,2:종료) :";
        cin >> option;
        if (option == "1") {
            cout << "값 입력: ";
            cin >> expr;

            //스택 검사
            if (areBracketsBalanced(expr))
                cout << "완벽\n";
            else
                cout << "괄호 오류\n";

        }
        else if (option == "2") {
            cout << "종료합니다 ";
            return 0;
        }
        else {
            cout << "다시 입력" << endl;
        }
    }

    return 0;
}
